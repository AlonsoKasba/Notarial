<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculadora Notarial con Gráfica 3D y Leyendas</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Charts Loader -->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <!-- jsPDF and html2canvas for PDF generation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.8.2/jspdf.plugin.autotable.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8 max-w-6xl">
        
        <!-- Header -->
        <header class="text-center mb-8">
            <h1 class="text-3xl sm:text-4xl font-bold text-gray-900">Calculadora Notarial</h1>
            <p class="mt-2 text-lg text-gray-600">Estimación de gastos de escrituración</p>
        </header>

        <!-- Main section with Calculator and Disclaimer -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            
            <!-- Input Form -->
            <div class="bg-white p-6 rounded-2xl shadow-lg border border-gray-200 self-start">
                <h2 class="text-2xl font-bold text-gray-900 mb-4">Datos del Inmueble</h2>
                <div class="space-y-5">
                    <div>
                        <label for="propertyValue" class="block text-sm font-medium text-gray-700 mb-1">Valor del Inmueble (MXN)</label>
                        <input type="number" id="propertyValue" name="propertyValue" placeholder="Ej: 2,500,000" class="w-full px-4 py-2 text-gray-900 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                        <p class="text-xs text-gray-500 mt-1">Usa el valor catastral para este cálculo.</p>
                    </div>
                    <button id="calculateBtn" class="w-full bg-blue-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-300 transition-all duration-300 ease-in-out transform hover:scale-105">
                        Calcular Estimación
                    </button>
                </div>
            </div>

            <!-- Disclaimer -->
            <div class="bg-yellow-50 border border-yellow-200 text-yellow-800 px-6 py-4 rounded-2xl text-sm self-start">
                 <h3 class="font-bold text-lg mb-2">Aviso Importante</h3>
                <p>Esta herramienta proporciona una estimación y no debe considerarse como una cotización final. Los costos reales pueden variar. Los cálculos se basan en un modelo general. Consulta siempre a un Notario Público para obtener una cotización precisa y formal.</p>
            </div>
        </div>

        <!-- Results Display Section -->
        <div id="results-section" class="hidden">
             <div id="results-card" class="bg-white p-6 rounded-2xl shadow-lg border border-gray-200">
                <div class="flex justify-between items-center mb-4 gap-2">
                    <h2 class="text-2xl font-bold text-gray-900">Resultados de la Estimación</h2>
                    <div class="flex gap-2">
                        <!-- WhatsApp Share Button -->
                        <button id="shareWaBtn" class="bg-green-500 text-white text-xs font-bold py-2 px-3 rounded-lg hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 transition-all duration-300 flex items-center gap-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-whatsapp" viewBox="0 0 16 16"><path d="M13.601 2.326A7.85 7.85 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.9 7.9 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.9 7.9 0 0 0 13.6 2.326zM7.994 14.521a6.6 6.6 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.56 6.56 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592m3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.73.73 0 0 0-.529.247c-.182.198-.691.677-.691 1.654s.71 1.916.81 2.049c.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232"/></svg>
                            <span class="hidden sm:inline">Compartir</span>
                        </button>
                        <!-- PDF Download Button -->
                        <button id="downloadPdfBtn" class="bg-red-500 text-white text-xs font-bold py-2 px-3 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-4 focus:ring-red-300 transition-all duration-300 flex items-center gap-1">
                             <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-pdf" viewBox="0 0 16 16"><path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z"/><path d="M4.603 14.087a.8.8 0 0 1-1.214-.882l.184-.28a.5.5 0 0 1 .843.39.28.28 0 0 0 .052.158l.155.24.1.15a.07.07 0 0 1 .01.026.12.12 0 0 1-.016.027.07.07 0 0 1-.011.006l-.112.032a.5.5 0 0 1-.45.12zM6.854 11.03a.5.5 0 0 1 .411.575l-.234.93a.5.5 0 1 1-.957-.238l.234-.93a.5.5 0 0 1 .546-.337M8.5 11.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1a.5.5 0 0 1 .5-.5m3.293-1.25a.5.5 0 0 1 .144.775l-1.2 1.2a.5.5 0 0 1-.708-.708l1.2-1.2a.5.5 0 0 1 .564-.067"/></svg>
                             <span class="hidden sm:inline">Descargar</span>
                        </button>
                    </div>
                </div>
                
                <div id="results-container">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-x-6 items-start">
                        <div id="results-content" class="space-y-2"></div>
                        <div class="flex flex-col items-center">
                            <div id="costsChart" class="relative h-64 md:h-72 w-full"></div>
                            <div id="custom-legend" class="mt-2 grid grid-cols-2 gap-x-4 gap-y-1 w-full max-w-sm"></div>
                        </div>
                    </div>
                    <div class="mt-6 pt-4 border-t border-gray-200">
                         <div class="flex justify-between items-center">
                            <p class="text-lg font-bold text-gray-900">Costo Total Estimado:</p>
                            <p id="total-cost" class="text-2xl font-bold text-blue-600"></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="error-message" class="bg-red-50 border-l-4 border-red-400 text-red-800 p-6 rounded-lg h-full hidden items-center justify-center">
                <p class="text-center">Por favor, introduce un valor válido para el inmueble.</p>
            </div>
        </div>

        <!-- Explanations Section Moved to the bottom -->
        <div id="explanations-section-container" class="mt-8 hidden">
            <div id="explanations-section" class="p-6 bg-white rounded-2xl shadow-lg border border-gray-200">
                 <h2 class="text-2xl font-bold text-gray-900 mb-4">Explicación del Desglose</h2>
                <div class="space-y-3 text-gray-700">
                    <div>
                        <h3 class="font-semibold text-gray-800">Impuesto (ISAI)</h3>
                        <p class="mt-1 text-sm">Pago obligatorio al gobierno por la compra de la propiedad. Es uno de los costos más significativos.</p>
                    </div>
                    <div>
                        <h3 class="font-semibold text-gray-800">Honorarios del Notario</h3>
                        <p class="mt-1 text-sm">Pago por los servicios del Notario Público, quien da fe y legalidad al acto de compraventa.</p>
                    </div>
                    <div>
                        <h3 class="font-semibold text-gray-800">IVA sobre Honorarios</h3>
                        <p class="mt-1 text-sm">Los honorarios del notario generan un IVA del 16%, que debe ser pagado al fisco.</p>
                    </div>
                     <div>
                        <h3 class="font-semibold text-gray-800">Avalúo</h3>
                        <p class="mt-1 text-sm">Reporte para determinar el valor comercial del inmueble, base para el cálculo de impuestos.</p>
                    </div>
                    <div>
                        <h3 class="font-semibold text-gray-800">Derechos de Registro</h3>
                        <p class="mt-1 text-sm">Costo por inscribir la nueva escritura en el Registro Público de la Propiedad.</p>
                    </div>
                    <div>
                        <h3 class="font-semibold text-gray-800">Gastos Diversos</h3>
                        <p class="mt-1 text-sm">Agrupa costos de certificados, constancias y otros trámites para la escrituración.</p>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
        // --- Global data variables ---
        let lastCalculation = {};

        // --- Load Google Charts ---
        google.charts.load('current', {'packages':['corechart']});

        // --- Use jsPDF ---
        const { jsPDF } = window.jspdf;
        
        // --- Helper Functions ---
        const formatCurrency = (value) => new Intl.NumberFormat('es-MX', { style: 'currency', currency: 'MXN' }).format(value);
        
        // --- Database of Rates and Formulas ---
        const notarialRates = {
            "General": {
                isai: (v) => v * 0.037, 
                notaryFees: (v) => v * 0.020,
                appraisalFee: (v) => v * 0.005,
                registrationFees: (v) => v * 0.008,
                otherExpenses: (v) => v * 0.0133,
            }
        };
        const chartColors = ['#3b82f6', '#10b981', '#f59e0b', '#6366f1', '#8b5cf6', '#ef4444'];
        const chartLabels = ['Impuesto (ISAI)', 'Honorarios Notario', 'IVA s/ Honorarios', 'Avalúo', 'Derechos Registro', 'Gastos Diversos'];

        // --- DOM Element References ---
        const calculateBtn = document.getElementById('calculateBtn');
        const resultsSection = document.getElementById('results-section');
        const resultsContent = document.getElementById('results-content');
        const totalCostEl = document.getElementById('total-cost');
        const errorMessage = document.getElementById('error-message');
        const customLegend = document.getElementById('custom-legend');
        const downloadPdfBtn = document.getElementById('downloadPdfBtn');
        const shareWaBtn = document.getElementById('shareWaBtn');
        const explanationsContainer = document.getElementById('explanations-section-container');

        // --- Main Calculation and Display Logic ---
        calculateBtn.addEventListener('click', () => {
            const propertyValue = parseFloat(document.getElementById('propertyValue').value);
            
            if (!propertyValue || propertyValue <= 0) {
                errorMessage.classList.remove('hidden');
                resultsSection.classList.add('hidden');
                explanationsContainer.classList.add('hidden');
                return;
            }
            errorMessage.classList.add('hidden');
            
            const rates = notarialRates["General"];
            const isaiCost = rates.isai(propertyValue);
            const notaryFeesCost = rates.notaryFees(propertyValue);
            const ivaOnFees = notaryFeesCost * 0.16;
            const appraisalCost = rates.appraisalFee(propertyValue);
            const registrationFeesCost = rates.registrationFees(propertyValue);
            const otherExpensesCost = rates.otherExpenses(propertyValue);
            const totalCost = isaiCost + notaryFeesCost + ivaOnFees + appraisalCost + registrationFeesCost + otherExpensesCost;
            
            lastCalculation = {
                propertyValue, isaiCost, notaryFeesCost, ivaOnFees, appraisalCost, registrationFeesCost, otherExpensesCost, totalCost
            };
            
            const breakdownData = [isaiCost, notaryFeesCost, ivaOnFees, appraisalCost, registrationFeesCost, otherExpensesCost];

            resultsContent.innerHTML = '';
            customLegend.innerHTML = ''; 
            breakdownData.forEach((cost, i) => {
                resultsContent.innerHTML += `
                    <div class="flex justify-between items-center p-2 rounded-lg hover:bg-gray-50 animate-fade-in" style="animation-delay: ${0.1 * (i+1)}s;">
                        <span class="text-sm font-medium text-gray-700">${chartLabels[i]}:</span>
                        <span class="text-sm font-semibold text-gray-900">${formatCurrency(cost)}</span>
                    </div>`;
                customLegend.innerHTML += `
                    <div class="flex items-center text-xs text-gray-600">
                        <span class="w-3 h-3 rounded-full mr-2" style="background-color: ${chartColors[i]};"></span>
                        ${chartLabels[i]}
                    </div>
                `;
            });
            
            totalCostEl.textContent = formatCurrency(totalCost);
            google.charts.setOnLoadCallback(() => drawChart(breakdownData));
            resultsSection.classList.remove('hidden');
            explanationsContainer.classList.remove('hidden');
            resultsSection.classList.add('animate-fade-in');
            explanationsContainer.classList.add('animate-fade-in');
        });

        // --- Share Logic (WhatsApp & Fallback) ---
        shareWaBtn.addEventListener('click', async () => {
            if (!lastCalculation.totalCost) return;

            const { propertyValue, totalCost } = lastCalculation;
            
            let textMessage = `¡Hola! Te comparto una estimación de gastos notariales:\n\n` +
                              `*Valor del Inmueble:* ${formatCurrency(propertyValue)}\n\n` +
                              `*Desglose de Gastos:*\n` +
                              chartLabels.map((label, i) => `- ${label}: ${formatCurrency(Object.values(lastCalculation)[i + 1])}`).join('\n') +
                              `\n\n*Costo Total Estimado:* ${formatCurrency(totalCost)}\n\n` +
                              `Calculado con la herramienta de estimación notarial.`;

            const resultsToCapture = document.getElementById('results-card');

            try {
                const canvas = await html2canvas(resultsToCapture, { backgroundColor: '#FFFFFF', scale: 2 });
                const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));
                const file = new File([blob], 'estimacion-notarial.png', { type: 'image/png' });
                
                if (navigator.canShare && navigator.canShare({ files: [file] })) {
                    await navigator.share({
                        files: [file],
                        title: 'Estimación Notarial',
                        text: textMessage,
                    });
                    return; 
                }
            } catch (error) {
                console.error("Error sharing image:", error);
            }

            const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(textMessage)}`;
            window.open(whatsappUrl, '_blank');
        });
        
        // --- PDF Download Logic (Single Page) ---
        downloadPdfBtn.addEventListener('click', () => {
            if (!lastCalculation.totalCost) return;
            const chartElement = document.getElementById('costsChart');
            setTimeout(() => {
                html2canvas(chartElement, { backgroundColor: null, scale: 2 }).then(canvas => {
                    const chartImage = canvas.toDataURL('image/png');
                    generatePDF(chartImage);
                });
            }, 500);
        });

        function generatePDF(chartImage) {
            const { propertyValue, totalCost } = lastCalculation;
            const doc = new jsPDF('p', 'pt', 'letter');
            const pageWidth = doc.internal.pageSize.getWidth();
            const margin = 40;

            doc.setFontSize(16);
            doc.text("Estimación de Gastos Notariales", pageWidth / 2, margin - 15, { align: 'center' });
            doc.setFontSize(11);
            doc.text(`Para un inmueble con valor de: ${formatCurrency(propertyValue)}`, pageWidth / 2, margin, { align: 'center' });

            doc.autoTable({
                startY: margin + 15,
                head: [['Concepto', 'Monto']],
                body: chartLabels.map((label, i) => [label, formatCurrency(Object.values(lastCalculation)[i + 1])]),
                foot: [['Costo Total Estimado', formatCurrency(totalCost)]],
                theme: 'grid',
                headStyles: { fillColor: [41, 128, 185], textColor: 255 },
                footStyles: { fontStyle: 'bold', fillColor: [230, 230, 230], textColor: 0 },
                margin: { left: margin, right: pageWidth / 2 + 10 },
            });
            let tableFinalY = doc.lastAutoTable.finalY;

            const chartSize = 120;
            const chartX = pageWidth / 2 + 45;
            const chartY = margin + 20;
            doc.addImage(chartImage, 'PNG', chartX, chartY, chartSize, chartSize);

            let legendY = chartY + chartSize + 15;
            doc.setFontSize(8);
            chartLabels.forEach((label, i) => {
                const colIndex = i % 2;
                const rowIndex = Math.floor(i / 2);
                const legendX = chartX + colIndex * (chartSize/2 + 5);
                const currentY = legendY + rowIndex * 12;
                doc.setFillColor(chartColors[i]);
                doc.rect(legendX, currentY - 5, 6, 6, 'F');
                doc.text(label, legendX + 10, currentY);
            });

            let finalY = Math.max(tableFinalY, legendY + Math.ceil(chartLabels.length / 2) * 12) + 20;

            doc.setFontSize(12);
            doc.setFont(undefined, 'bold');
            doc.text("Explicación del Desglose", margin, finalY);
            finalY += 15;

            const explanations = document.querySelectorAll('#explanations-section-container div div div');
            const columnWidth = (pageWidth - (margin * 2) - 15) / 2;
            let yPosLeft = finalY;
            let yPosRight = finalY;
            
            doc.setFontSize(9);

            explanations.forEach((exp, index) => {
                let currentY, currentX;
                const isLeftColumn = index < Math.ceil(explanations.length / 2);
                if (isLeftColumn) { currentY = yPosLeft; currentX = margin; } 
                else { currentY = yPosRight; currentX = margin + columnWidth + 15; }
                const title = exp.querySelector('h3').innerText;
                const text = exp.querySelector('p').innerText;
                doc.setFont(undefined, 'bold');
                doc.text(title, currentX, currentY);
                currentY += 12;
                doc.setFont(undefined, 'normal');
                const splitText = doc.splitTextToSize(text, columnWidth);
                doc.text(splitText, currentX, currentY);
                currentY += splitText.length * 10 + 12;
                if (isLeftColumn) { yPosLeft = currentY; } 
                else { yPosRight = currentY; }
            });

            doc.save('estimacion-notarial-completa.pdf');
        }

        // --- Chart Function (Google Charts) ---
        function drawChart(dataValues) {
            const data = new google.visualization.DataTable();
            data.addColumn('string', 'Concepto');
            data.addColumn('number', 'Monto');
            data.addRows(chartLabels.map((label, i) => [label, dataValues[i]]));
            const options = {
                is3D: true,
                backgroundColor: 'transparent',
                colors: chartColors,
                legend: 'none',
                pieSliceText: 'none',
                chartArea: { left: 5, top: 10, width: '90%', height: '90%' },
                tooltip: { trigger: 'selection' }
            };
            const chart = new google.visualization.PieChart(document.getElementById('costsChart'));
            chart.draw(data, options);
        }
    </script>
</body>
</html>
